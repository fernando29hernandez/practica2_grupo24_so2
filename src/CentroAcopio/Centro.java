/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CentroAcopio;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.border.Border;

/**
 *
 * @author Fernando
 */
public class Centro extends javax.swing.JFrame {

    /**
     * Creates new form Centro
     */
    public Espacio cuadricula[][] = new Espacio[10][2];
    ExecutorService ejecutorPersona;
    ListaEspacios lista;
    public static int personasmeter = 0;
    public static int personassacar = 0;
    public static int despachadas = 0;

    public Centro() {
        initComponents();

        this.setSize(950, 600);
        this.setLocationRelativeTo(null);
        int inicioX = 120;
        int inicioY = 20;
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 2; j++) {
                cuadricula[i][j] = new Espacio();
                cuadricula[i][j].setBackground(Color.black);
                cuadricula[i][j].setOpaque(true);
                Border border = BorderFactory.createLineBorder(Color.white, 1);
                cuadricula[i][j].setBorder(border);
                cuadricula[i][j].setBounds(inicioY + 70, inicioX, 60, 60);
                this.add(cuadricula[i][j]);
                inicioX += 70;
            }
            inicioX = 120;
            inicioY += 80;
        }
        this.getContentPane();
        puerta1.setBackground(Color.magenta);
        puerta1.setOpaque(true);
        puerta2.setBackground(Color.magenta);
        puerta2.setOpaque(true);
        lista = new ListaEspacios();
        txtmeter.setText("0");
        txtretirar.setText("0");
        txtdespachados.setText("0");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        puerta1 = new javax.swing.JLabel();
        puerta2 = new javax.swing.JLabel();
        cantidadclientes = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtmeter = new javax.swing.JTextField();
        txtretirar = new javax.swing.JTextField();
        txtdespachados = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        puerta1.setText("Puerta 1");

        puerta2.setText("Puerta 2");

        jLabel1.setText("Numero de clientes en simulacion");

        jButton1.setText("Empezar Simulacion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Personas para Meter Caja");

        jLabel3.setText("Personas para Retirar Caja");

        jLabel4.setText("Personas Despachadas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(puerta1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(puerta2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtmeter, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtretirar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtdespachados, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(47, 47, 47)
                        .addComponent(cantidadclientes, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantidadclientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txtmeter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtretirar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdespachados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(puerta2, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(puerta1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public static ImageIcon getIcono(int opcion) {
        String resultado = "";
        switch (opcion) {
            case 1:
                resultado = "caja.jpg";
                break;
            case 2:
                resultado = "caja.jpg";
                break;
        }
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(resultado));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img.getScaledInstance(60, 60, Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(dimg);
        return imageIcon;
    }

    public static int coinToss() {
        return (int) Math.round(Math.random());
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ejecutorPersona = Executors.newCachedThreadPool();
        String numero = cantidadclientes.getText();
        int cantidad = Integer.parseInt(numero);
        for (int i = 0; i < cantidad; i++) {
            int accion = coinToss();
            if (accion == 0) {
                actualizarmeter(0);

            } else {
                actualizarsacar(0);

            }
            System.out.println("este cliente va a : " + (accion == 1 ? "sacar" : "meter"));
            ejecutorPersona.execute(new Persona(accion, cuadricula, lista));
            System.out.println("llega cliente");

        }
//        for (int i = 0; i < cantidad/2; i++) {
//            int accion=coinToss();
//            System.out.println("este cliente va a : "+(accion==1?"sacar":"meter"));
//            ejecutorPersona.execute(new Persona(1,cuadricula,lista));
//            System.out.println("llega cliente");
//            
//        }

    }//GEN-LAST:event_jButton1ActionPerformed
    public static void actualizarmeter(int accion) {
        if (accion == 0) {
            personasmeter = personasmeter + 1;
        } else {
            personasmeter = personasmeter - 1;
        }
        txtmeter.setText(String.valueOf(personasmeter));
        try {

            Thread.sleep(50);
        } catch (Exception e) {
        }
    }

    public static void actualizarsacar(int accion) {
        if (accion == 0) {
            personassacar = 1 + personassacar;
        } else {
            personassacar = personassacar - 1;
        }
        txtretirar.setText(String.valueOf(personassacar));
        try {

            Thread.sleep(50);
        } catch (Exception e) {
        }
    }

    public static void actualizardespacho() {
        despachadas = despachadas + 1;
        txtdespachados.setText(String.valueOf(despachadas));
        try {

            Thread.sleep(50);
        } catch (Exception e) {
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cantidadclientes;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public static javax.swing.JLabel puerta1;
    public static javax.swing.JLabel puerta2;
    public static javax.swing.JTextField txtdespachados;
    public static javax.swing.JTextField txtmeter;
    public static javax.swing.JTextField txtretirar;
    // End of variables declaration//GEN-END:variables
}
